"""
주어진 정수 x를 연산을 통해 1로 만드는 최솟값을 출력(x는 3만이하)

연산에 우선순위를 매길 수 있다면 그리디 알고리즘인데 우선순위를 정하기가 어렵다...
1. x가 5로 나누어 떨어지면 5로 나누기
2. x가 3로 나누어 떨어지면 3로 나누기
3. x가 2로 나누어 떨어지면 2로 나누기
4. x에서 1을 빼기

26 -> 25가 될수도 있고 13이 될수도 있다
다시 25의 연산의 최솟값을 구하고 13의 연산의 최솟값을 구해서 그 중 최솟값을 출력
보텀업 방식!

x가 최대 3만의 정수이므로 1부터 3만까지의 차례대로 연산의 최솟값을 리스트에 확정짓는다
이후 입력받은 정수의 해당하는 리스트에 저장된 최솟값을 그대로 출력

각 정수의 1을 만드는 최소연산을 구하는 점화식만 완성하면 됨
1 2 3 4의 연산이후 정수에 해당하는 값중에 최소를 최소연산으로 설정
ai = min(ai/5, ai/3, ai/2, ai-1) 
"""
n = int(input())

a = [30000] * (n + 1)
a[1] = 0
a[2] = 1
a[3] = 1
a[4] = 2
if n > 4:  # 풀이를 생각하다보니 1-4까지는 일일이 계산했지만 2부터 알고리즘을 바로 적용해도 ok
    for i in range(5, n + 1):
        if(i % 5 == 0):
            fifth = i // 5
            a[i] = min(a[fifth] + 1, a[i])
        if(i % 3 == 0):
            third = i // 3
            a[i] = min(a[third] + 1, a[i])
        if(i % 2 == 0):
            second = i // 2
            a[i] = min(a[second] + 1, a[i])
        rest = i - 1
        a[i] = min(a[rest] + 1, a[i])

print(a[n])
