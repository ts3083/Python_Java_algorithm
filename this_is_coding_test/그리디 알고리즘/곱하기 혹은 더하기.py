# 각 자리가 숫자(0 ~ 9)로만 이루어진 문자열
# 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 x 혹은 + 연산자를 넣어 결과적으로
# 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성
# 대수학에서의 사칙연산 규칙을 만족하지 않고 모든 연산은 왼쪽에서부터 순서대로 이루어진다.
# ex) 02984라는 문자열로 만들 수 있는 가장 큰 수 = ((((0 + 2) * 9) * 8) * 4) = 576
# 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수
# 파이썬에서는 표현 가능한 정수형에 제한이 없지만 자바, C++에서는 int형으로 표현가능한 숫자가 약21억이하이다.

# 가장 큰 수가 나오려면 모든 수가 곱해지면 된다. 하지만 0이 포함되어 있다면 +해주어야 가장 큰 수가 된다.
# 따라서 문자열을 순서대로 파악할 때 0인지 확인하고 0이라면 더하고 아니면 곱하는 프로그램을 작성
# 중요! 0뿐만 아니라 1인 경우도 곱하기가 아니라 더하기 연산일 때 더 큰 수를 얻는다.

str = input()
result = int(str[0])
for i in range(0, len(str) - 1):
    num_next = int(str[i + 1])
    if (result <= 1 or num_next <= 1):
        result += num_next
    else: 
        result *= num_next
print(result)